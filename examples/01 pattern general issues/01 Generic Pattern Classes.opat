
(:patch
 (:om-version 0.02)
 (:name "01 Generic Pattern Classes")
 (:doc "")
 (:info
  (:created "2019/09/09 10:50:12")
  (:modified "2019/09/10 9:48:10"))
 (:window (:size (1054 549)) (:position (146 115)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 620)
   (:y 460)
   (:w 287)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "generates elements by rewrite rules")
   (:id 0))
  (:box
   (:library "Patterns")
   (:reference p-rewrite)
   (:type :function)
   (:group-id nil)
   (:name "p-rewrite")
   (:x 517)
   (:y 440)
   (:w 84)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:comment
   (:x 620)
   (:y 360)
   (:w 287)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "returns systematic permutations of its elements")
   (:id 2))
  (:box
   (:library "Patterns")
   (:reference p-rotation)
   (:type :function)
   (:group-id nil)
   (:name "p-rotation")
   (:x 515)
   (:y 340)
   (:w 88)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ROTATIONS")
     (:value (:list 0 1 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:comment
   (:x 620)
   (:y 280)
   (:w 287)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "computes elements by function call")
   (:id 4))
  (:box
   (:library "Patterns")
   (:reference p-thunk)
   (:type :function)
   (:group-id nil)
   (:name "p-thunk")
   (:x 520)
   (:y 250)
   (:w 76)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:comment
   (:x 620)
   (:y 180)
   (:w 287)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "generates elements from a directed graph")
   (:id 6))
  (:box
   (:library "Patterns")
   (:reference p-graph)
   (:type :function)
   (:group-id nil)
   (:name "p-graph")
   (:x 520)
   (:y 160)
   (:w 76)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:comment
   (:x 620)
   (:y 80)
   (:w 287)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "returns nth order Markov chains of its elements")
   (:id 8))
  (:box
   (:library "Patterns")
   (:reference p-markov)
   (:type :function)
   (:group-id nil)
   (:name "p-markov")
   (:x 515)
   (:y 60)
   (:w 85)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:comment
   (:x 120)
   (:y 460)
   (:w 314)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "selects elements from a weighted distribution")
   (:id 10))
  (:box
   (:library "Patterns")
   (:reference p-weighting)
   (:type :function)
   (:group-id nil)
   (:name "p-weighting")
   (:x 20)
   (:y 440)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:comment
   (:x 120)
   (:y 360)
   (:w 314)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "randomly permutes elements")
   (:id 12))
  (:box
   (:library "Patterns")
   (:reference p-heap)
   (:type :function)
   (:group-id nil)
   (:name "p-heap")
   (:x 34)
   (:y 340)
   (:w 72)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:comment
   (:x 388)
   (:y 10)
   (:w 349)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :plain)))
   (:align nil)
   (:text "Pattern Description - Generic Pattern Classes")
   (:id 14))
  (:comment
   (:x 120)
   (:y 280)
   (:w 314)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "generates elements forwards and backwards")
   (:id 15))
  (:box
   (:library "Patterns")
   (:reference p-palindrome)
   (:type :function)
   (:group-id nil)
   (:name "p-palindrome")
   (:x 20)
   (:y 250)
   (:w 104)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ELIDE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:library "Patterns")
   (:reference p-line)
   (:type :function)
   (:group-id nil)
   (:name "p-line")
   (:x 40)
   (:y 160)
   (:w 66)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:comment
   (:x 120)
   (:y 180)
   (:w 314)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "enumerates sequentially and sticks on last element")
   (:id 18))
  (:comment
   (:x 120)
   (:y 80)
   (:w 258)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "loops over elements in a continuous cycle")
   (:id 19))
  (:box
   (:library "Patterns")
   (:reference p-cycle)
   (:type :function)
   (:group-id nil)
   (:name "p-cycle")
   (:x 40)
   (:y 60)
   (:w 72)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20)))
 (:connections))