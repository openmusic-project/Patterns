; OM File Header - Saved 2017/04/04 14:15:39
; (6.120001 :patc (om-make-point 226 10) (om-make-point 0 0) (om-make-point 949 277) "" 183 0 "2017/03/21 8:58:53" "2017/03/31 8:10:16")
; End File Header
(in-package :om)(load-lib-for (quote ("Patterns")))(setf *om-current-persistent* (om-load-patch1 "02 Specialized Pattern Classes" (quote ((let ((box (om-load-boxcall (quote genfun) "PVAL" (quote pval) (quote ((om-load-inputfun (quote input-funbox) "" "NAME" nil))) (om-make-point 480 160) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 375 38) (quote "Pattern Description - Specialized Pattern Classes") "" (om-make-point 241 18) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 15.998697916666666D0 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 158 30) (quote "evaluates a pattern value") "" (om-make-point 557 180) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 322 30) (quote "merges patterns together into a single stream of data") "" (om-make-point 560 80) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "P-JOIN" (quote p-join) (quote ((om-load-inputfun (quote input-funbox) "" "OF" nil))) (om-make-point 480 60) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 174 30) (quote "iterates numbers in a range") "" (om-make-point 122 180) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "P-RANGE" (quote p-range) (quote ((om-load-inputfun (quote input-funbox) "" "FROM" 0))) (om-make-point 42 160) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 266 30) (quote "copies and repeats periods of a sub-pattern") "" (om-make-point 120 80) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "P-COPIER" (quote p-copier) (quote ((om-load-inputfun (quote input-funbox) "" "OF" nil))) (om-make-point 40 60) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote nil) nil 6.120001))
