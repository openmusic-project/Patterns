
(:patch
 (:om-version 0.02)
 (:name "03 Generic Pattern Initializations")
 (:doc "")
 (:info
  (:created "2019/09/09 10:50:11")
  (:modified "2019/09/10 9:47:22"))
 (:window (:size (825 595)) (:position (484 271)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 140)
   (:y 79)
   (:w 529)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "All pattern classes accept these arguments {of &key for repeat name returning eop-hook}")
   (:id 0))
  (:box
   (:library "Patterns")
   (:reference p-cycle)
   (:type :function)
   (:group-id nil)
   (:name "p-cycle")
   (:x 62)
   (:y 498)
   (:w 500)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "for") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "repeat") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "name") (:value nil) (:reactive nil))
    (:input
     (:type :key)
     (:name "returning")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "eop-hook")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:comment
   (:x 140)
   (:y 370)
   (:w 442)
   (:h 45)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "{function} An optional function (thunk) to call each time the period is reset.
The function is passed no arguments and any return values are ignored. ")
   (:id 2))
  (:comment
   (:x 40)
   (:y 370)
   (:w 95)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :bold)))
   (:align nil)
   (:text ":eop-hook")
   (:id 3))
  (:comment
   (:x 140)
   (:y 310)
   (:w 492)
   (:h 60)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "{function} An optional function to apply to each element as it is generated from the 
pattern. The function is passed one argument, the element, and should return the
value to substitute in its place as the value returned from the pattern. ")
   (:id 4))
  (:comment
   (:x 40)
   (:y 310)
   (:w 95)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :bold)))
   (:align nil)
   (:text ":returning")
   (:id 5))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 6")
   (:x 92)
   (:y 430)
   (:w 30)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value of)
   (:id 6))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 5")
   (:x 391)
   (:y 430)
   (:w 72)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :returning)
   (:id 7))
  (:comment
   (:x 140)
   (:y 250)
   (:w 518)
   (:h 60)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "{string | symbol} Sets the name of the pattern to string or to the print name of symbol. 
A named pattern can be recalled as a \"motive\" inside a surrounding pattern by fetching 
the object from its name using the #& read macro or the find-object function.")
   (:id 8))
  (:comment
   (:x 40)
   (:y 250)
   (:w 72)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :bold)))
   (:align nil)
   (:text ":name")
   (:id 9))
  (:comment
   (:x 140)
   (:y 210)
   (:w 529)
   (:h 45)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "{number}  Sets an optional repetition limit for the pattern. Once the limit has been reached
the pattern will return an end of data marker instead of elements. ")
   (:id 10))
  (:comment
   (:x 40)
   (:y 210)
   (:w 72)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :bold)))
   (:align nil)
   (:text ":repeat")
   (:id 11))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 4")
   (:x 469)
   (:y 430)
   (:w 75)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :eop-hook)
   (:id 12))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 3")
   (:x 319)
   (:y 430)
   (:w 55)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :name)
   (:id 13))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 2")
   (:x 238)
   (:y 430)
   (:w 58)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :repeat)
   (:id 14))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux")
   (:x 190)
   (:y 430)
   (:w 37)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value :for)
   (:id 15))
  (:comment
   (:x 140)
   (:y 163)
   (:w 543)
   (:h 45)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "{number | pattern} Sets the period length of the pattern to number or pattern of numbers. 
The period length determines the number of elements in each chunk the pattern generates. ")
   (:id 16))
  (:comment
   (:x 40)
   (:y 170)
   (:w 44)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :bold)))
   (:align nil)
   (:text ":for")
   (:id 17))
  (:comment
   (:x 180)
   (:y 20)
   (:w 229)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :plain)))
   (:align nil)
   (:text "Generic Pattern Initializations")
   (:id 18))
  (:comment
   (:x 140)
   (:y 130)
   (:w 449)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "{data} Specifies the element or list of elements to generate from the pattern")
   (:id 19))
  (:comment
   (:x 40)
   (:y 130)
   (:w 31)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :bold)))
   (:align nil)
   (:text "of")
   (:id 20)))
 (:connections
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 1 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 1 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 1 :in 5))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 1 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 1 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 1 :in 1))
   (:attributes (:color nil :style nil :modif nil)))))