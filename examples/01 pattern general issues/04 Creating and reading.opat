
(:patch
 (:om-version 0.02)
 (:name "04 Creating and reading")
 (:doc "")
 (:info
  (:created "2019/09/09 10:50:12")
  (:modified "2019/09/09 10:52:04"))
 (:window (:size (814 459)) (:position (104 69)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 280)
   (:y 71)
   (:w 323)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :plain)))
   (:align nil)
   (:text "Creating Patterns and reading their events")
   (:id 0))
  (:comment
   (:x 20)
   (:y 220)
   (:w 164)
   (:h 45)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "p-next returns successive
items from a stream")
   (:id 1))
  (:comment
   (:x 420)
   (:y 237)
   (:w 175)
   (:h 75)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "optional [num] is how many
items to generate.
num=t means return one
period's worth of items")
   (:id 2))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 3")
   (:x 390)
   (:y 280)
   (:w 23)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value t)
   (:id 3))
  (:box
   (:reference p-next)
   (:type :function)
   (:group-id nil)
   (:name "p-next")
   (:x 360)
   (:y 320)
   (:w 69)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OBJ")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "num")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:comment
   (:x 280)
   (:y 20)
   (:w 229)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :plain)))
   (:align nil)
   (:text "Working with Patterns - ex. 4")
   (:id 5))
  (:comment
   (:x 20)
   (:y 126)
   (:w 155)
   (:h 75)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "create a pattern stream.
(Take care to lock it for
the examples in this
patch to work correctly)")
   (:id 6))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 2")
   (:x 268)
   (:y 280)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 7))
  (:box
   (:reference p-next)
   (:type :function)
   (:group-id nil)
   (:name "p-next")
   (:x 240)
   (:y 320)
   (:w 69)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OBJ")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "num")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:comment
   (:x 20)
   (:y 340)
   (:w 118)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "eval several times")
   (:id 9))
  (:box
   (:reference p-next)
   (:type :function)
   (:group-id nil)
   (:name "p-next")
   (:x 140)
   (:y 320)
   (:w 69)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OBJ")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux")
   (:x 188)
   (:y 77)
   (:w 65)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 2 3 4))
   (:id 11))
  (:box
   (:reference p-cycle)
   (:type :function)
   (:group-id nil)
   (:name "p-cycle")
   (:x 184)
   (:y 126)
   (:w 72)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value (:list 1 2 3 4))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12)))
 (:connections
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 4 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 8 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 4 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 8 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 10 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))