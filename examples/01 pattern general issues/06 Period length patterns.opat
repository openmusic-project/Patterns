
(:patch
 (:om-version 0.02)
 (:name "06 Period length patterns")
 (:doc "")
 (:info
  (:created "2019/09/09 10:50:11")
  (:modified "2019/09/10 9:48:08"))
 (:window (:size (954 817)) (:position (451 99)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 607)
   (:y 141)
   (:w 120)
   (:h 45)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "generate rhythm
tree modulo beats")
   (:id 0))
  (:comment
   (:x 700)
   (:y 288)
   (:w 151)
   (:h 75)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "for (period) =4 assures
4 * 1/16 every time 
this element is picked
by the p-weithing below")
   (:id 1))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux 7")
   (:x 566)
   (:y 521)
   (:w 45)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 4 8))
   (:id 2))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 6")
   (:x 387)
   (:y 582)
   (:w 41)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 120)
   (:id 3))
  (:box
   (:reference voice)
   (:type :object)
   (:group-id nil)
   (:name "VOICE")
   (:x 103)
   (:y 643)
   (:w 540)
   (:h 104)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "VOICE")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list ? (:list (:list (:list 4 4) (:list 1 1 1 1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params
    (:time-map
     (:list
      (:list 0 6.5)
      (:list 250 10.75)
      (:list 375 14.375)
      (:list 500 18.0)
      (:list 625 21.625)
      (:list 750 25.25)
      (:list 875 28.875)
      (:list 1000 38.5)
      (:list 1125 42.125)
      (:list 1250 45.75)
      (:list 1375 49.375)
      (:list 1500 53.0)
      (:list 1625 56.625)
      (:list 1750 60.25)
      (:list 2000 70.5)
      (:list 2125 74.125)
      (:list 2250 77.75)
      (:list 2375 81.375)
      (:list 2500 85.0)
      (:list 2625 88.625)
      (:list 2750 92.25)
      (:list 2875 95.875)
      (:list 3000 105.5)
      (:list 3125 109.125)
      (:list 3250 112.75)
      (:list 3375 116.375)
      (:list 3500 120.0)
      (:list 3750 124.25)
      (:list 3875 127.875)
      (:list 4000 137.5)
      (:list 4125 141.125)
      (:list 4250 144.75)
      (:list 4500 149.0)
      (:list 4625 152.625)
      (:list 4750 156.25)
      (:list 4875 159.875)
      (:list 5000 169.5)
      (:list 5250 173.75)
      (:list 5500 178.0)
      (:list 5625 181.625)
      (:list 5750 185.25)
      (:list 5875 188.875)
      (:list 6000 198.5)
      (:list 6125 202.125)
      (:list 6250 205.75)
      (:list 6375 209.375)
      (:list 6500 213.0)
      (:list 6750 217.25)
      (:list 6875 220.875)
      (:list 7000 230.5)
      (:list 7125 234.125)
      (:list 7250 237.75)
      (:list 7375 241.375)
      (:list 7500 245.0)
      (:list 7625 248.625)
      (:list 7750 252.25)
      (:list 7875 255.875)
      (:list 8000 265.5)
      (:list 8125 269.125)
      (:list 8250 272.75)
      (:list 8375 276.375)
      (:list 8500 280.0)
      (:list 8625 283.625)
      (:list 8750 287.25)
      (:list 9000 297.5)
      (:list 9125 301.125)
      (:list 9250 304.75)
      (:list 9375 308.375)
      (:list 9500 312.0)
      (:list 9750 316.25)
      (:list 9875 319.875)
      (:list 10000 329.5)
      (:list 10125 333.125)
      (:list 10250 336.75)
      (:list 10500 341.0)
      (:list 10625 344.625)
      (:list 10750 348.25)
      (:list 10875 351.875)
      (:list 11000 361.5)
      (:list 11250 365.75)
      (:list 11375 369.375)
      (:list 11500 373.0)
      (:list 11625 376.625)
      (:list 11750 380.25)
      (:list 11875 383.875)
      (:list 12000 393.5)
      (:list 12125 397.125)
      (:list 12250 400.75)
      (:list 12375 404.375)
      (:list 12500 408.0)
      (:list 12625 411.625)
      (:list 12750 415.25)
      (:list 12875 418.875)
      (:list 13000 428.5)
      (:list 13125 432.125)
      (:list 13250 435.75)
      (:list 13500 440.0)
      (:list 13625 443.625)
      (:list 13750 447.25)
      (:list 13875 450.875)))
    (:staff :g))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 13999)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 6900)
         (:list 7100)
         (:list 7200)
         (:list 7400)
         (:list 7500)
         (:list 6900)
         (:list 7100)
         (:list 7200)
         (:list 5100)
         (:list 6400)
         (:list 6300)
         (:list 7400)
         (:list 6900)
         (:list 7700)
         (:list 8900)
         (:list 5100)
         (:list 6400)
         (:list 7500)
         (:list 7100)
         (:list 7700)
         (:list 8900)
         (:list 5100)
         (:list 6400)
         (:list 7700)
         (:list 8900)
         (:list 6300)
         (:list 7500)
         (:list 7200)
         (:list 7400)
         (:list 6900)
         (:list 7100)
         (:list 5100)
         (:list 6400)
         (:list 6300)
         (:list 7200)
         (:list 7400)
         (:list 6900)
         (:list 7700)
         (:list 8900)
         (:list 5100)
         (:list 6400)
         (:list 7500)
         (:list 7100)
         (:list 7200)
         (:list 7700)
         (:list 8900)
         (:list 5100)
         (:list 6400)
         (:list 7700)
         (:list 8900)
         (:list 6300)
         (:list 7400)
         (:list 7500)
         (:list 5100)
         (:list 6400)
         (:list 6300)
         (:list 6900)
         (:list 7100)
         (:list 7200)
         (:list 7400)
         (:list 7700)
         (:list 8900)
         (:list 5100)
         (:list 6400)
         (:list 7500)
         (:list 6900)
         (:list 7100)
         (:list 7200)
         (:list 7700)
         (:list 8900)
         (:list 5100)
         (:list 6400)
         (:list 7700)
         (:list 8900)
         (:list 6300)
         (:list 7400)
         (:list 6900)
         (:list 7500)
         (:list 7100)
         (:list 5100)
         (:list 6400)
         (:list 6300)
         (:list 7700)
         (:list 8900)
         (:list 5100)
         (:list 6400)
         (:list 7500)
         (:list 7200)
         (:list 7400)
         (:list 6900)
         (:list 7100)
         (:list 7700)
         (:list 8900)
         (:list 5100)
         (:list 6400)
         (:list 7700)
         (:list 8900)
         (:list 6300)
         (:list 7200)
         (:list 7400)))
       (:lonset
        (:list
         0
         250
         375
         500
         625
         750
         875
         1000
         1125
         1250
         1375
         1500
         1625
         1750
         2000
         2125
         2250
         2375
         2500
         2625
         2750
         2875
         3000
         3125
         3250
         3375
         3500
         3750
         3875
         4000
         4125
         4250
         4500
         4625
         4750
         4875
         5000
         5250
         5500
         5625
         5750
         5875
         6000
         6125
         6250
         6375
         6500
         6750
         6875
         7000
         7125
         7250
         7375
         7500
         7625
         7750
         7875
         8000
         8125
         8250
         8375
         8500
         8625
         8750
         9000
         9125
         9250
         9375
         9500
         9750
         9875
         10000
         10125
         10250
         10500
         10625
         10750
         10875
         11000
         11250
         11375
         11500
         11625
         11750
         11875
         12000
         12125
         12250
         12375
         12500
         12625
         12750
         12875
         13000
         13125
         13250
         13500
         13625
         13750
         13875
         14000))
       (:ldur
        (:list
         (:list 249)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 249)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 249)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 249)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 249)
         (:list 249)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 249)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 249)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 249)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 249)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 249)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 249)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 124)))
       (:lvel
        (:list
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)))
       (:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)
       (:tree
        (:list
         (:list
          (:list 4 8)
          (:list
           1
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))))
         (:list
          (:list 4 8)
          (:list
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           1))
         (:list
          (:list 4 8)
          (:list
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))))
         (:list
          (:list 4 8)
          (:list
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           1
           (:list 1 (:list 1 1))))
         (:list
          (:list 4 8)
          (:list
           (:list 1 (:list 1 1))
           1
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))))
         (:list
          (:list 4 8)
          (:list 1 1 (:list 1 (:list 1 1)) (:list 1 (:list 1 1))))
         (:list
          (:list 4 8)
          (:list
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           1
           (:list 1 (:list 1 1))))
         (:list
          (:list 4 8)
          (:list
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))))
         (:list
          (:list 4 8)
          (:list
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           1))
         (:list
          (:list 4 8)
          (:list
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           1
           (:list 1 (:list 1 1))))
         (:list
          (:list 4 8)
          (:list
           (:list 1 (:list 1 1))
           1
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))))
         (:list
          (:list 4 8)
          (:list
           1
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))))
         (:list
          (:list 4 8)
          (:list
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))))
         (:list
          (:list 4 8)
          (:list
           (:list 1 (:list 1 1))
           1
           (:list 1 (:list 1 1))
           (:list 1 (:list 1 1))))))
       (:tempo 120)))
     (:add-slots
      ((:lvel
        (:list
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)))
       (:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))))))
   (:id 4))
  (:box
   (:reference mktree)
   (:type :function)
   (:group-id nil)
   (:name "mktree")
   (:x 508)
   (:y 562)
   (:w 73)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RHYTHM")
     (:value (:list 1/4 1/4 1/4 1/4))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMESIGNS")
     (:value (:list 4 4))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:library "Patterns")
   (:reference p-weighting)
   (:type :function)
   (:group-id nil)
   (:name "p-weighting")
   (:x 586)
   (:y 384)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:reference list)
   (:type :function)
   (:group-id nil)
   (:name "list")
   (:x 613)
   (:y 333)
   (:w 52)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value 8) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value a) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:reference ratio)
   (:type :value)
   (:group-id nil)
   (:name "aux 5")
   (:x 580)
   (:y 200)
   (:w 37)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1/8)
   (:id 8))
  (:box
   (:library "Patterns")
   (:reference p-line)
   (:type :function)
   (:group-id nil)
   (:name "p-line")
   (:x 646)
   (:y 254)
   (:w 66)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "OF") (:value 16) (:reactive nil))
    (:input (:type :key) (:name "for") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 3")
   (:x 700)
   (:y 200)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 10))
  (:box
   (:reference ratio)
   (:type :value)
   (:group-id nil)
   (:name "aux 4")
   (:x 640)
   (:y 200)
   (:w 44)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1/16)
   (:id 11))
  (:box
   (:library "Patterns")
   (:reference p-next)
   (:type :function)
   (:group-id nil)
   (:name "p-next")
   (:x 499)
   (:y 481)
   (:w 69)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "OBJ") (:value n) (:reactive nil))
    (:input
     (:type :optional)
     (:name "num")
     (:value 20)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 4")
   (:x 360)
   (:y 442)
   (:w 41)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 13))
  (:box
   (:library "Patterns")
   (:reference p-next)
   (:type :function)
   (:group-id nil)
   (:name "p-next")
   (:x 247)
   (:y 493)
   (:w 69)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "OBJ") (:value n) (:reactive nil))
    (:input
     (:type :optional)
     (:name "num")
     (:value 80)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 2")
   (:x 413)
   (:y 214)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 15))
  (:box
   (:library "Patterns")
   (:reference p-cycle)
   (:type :function)
   (:group-id nil)
   (:name "p-cycle")
   (:x 228)
   (:y 401)
   (:w 72)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:reference chord)
   (:type :object)
   (:group-id nil)
   (:name "CHORD 3")
   (:x 354)
   (:y 119)
   (:w 60)
   (:h 90)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD 3")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LOFFSET")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "LOFFSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:onset 0)
       (:item-time nil)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:lmidic (:list 7500 6300))
       (:lvel (:list 100 100))
       (:loffset (:list 0 0))
       (:ldur (:list 1000 1000))
       (:lchan (:list 1 1))
       (:lport nil)
       (:notes
        (:list
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 7500)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 6300)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))))))
     (:add-slots ((:onset 0) (:lchan (:list 1 1)) (:lport nil)))))
   (:id 17))
  (:box
   (:library "Patterns")
   (:reference p-cycle)
   (:type :function)
   (:group-id nil)
   (:name "p-cycle")
   (:x 383)
   (:y 270)
   (:w 72)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value (:list 0 2 4 6 8))
     (:reactive nil))
    (:input (:type :key) (:name "for") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:reference list)
   (:type :function)
   (:group-id nil)
   (:name "list")
   (:x 176)
   (:y 349)
   (:w 186)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value a) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value b) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value c) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:reference chord)
   (:type :object)
   (:group-id nil)
   (:name "CHORD 2")
   (:x 174)
   (:y 60)
   (:w 60)
   (:h 90)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD 2")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LOFFSET")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "LOFFSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:onset 0)
       (:item-time nil)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:lmidic (:list 5100 6400 7700 8900))
       (:lvel (:list 100 100 100 100))
       (:loffset (:list 0 0 0 0))
       (:ldur (:list 1000 1000 1000 1000))
       (:lchan (:list 1 1 1 1))
       (:lport nil)
       (:notes
        (:list
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 5100)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 6400)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 7700)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 8900)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))))))
     (:add-slots ((:onset 0) (:lchan (:list 1 1 1 1)) (:lport nil)))))
   (:id 20))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux")
   (:x 270)
   (:y 138)
   (:w 65)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 2 4 6))
   (:id 21))
  (:box
   (:library "Patterns")
   (:reference p-cycle)
   (:type :function)
   (:group-id nil)
   (:name "p-cycle")
   (:x 266)
   (:y 179)
   (:w 72)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value (:list 4 3 2 1 0))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:library "Patterns")
   (:reference p-cycle)
   (:type :function)
   (:group-id nil)
   (:name "p-cycle")
   (:x 233)
   (:y 270)
   (:w 72)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value (:list 0 2 4 6 8))
     (:reactive nil))
    (:input (:type :key) (:name "for") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:reference chord)
   (:type :object)
   (:group-id nil)
   (:name "CHORD")
   (:x 17)
   (:y 175)
   (:w 60)
   (:h 90)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LOFFSET")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "LOFFSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:onset 0)
       (:item-time nil)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:lmidic (:list 6900 7100 7200 7400))
       (:lvel (:list 100 100 100 100))
       (:loffset (:list 0 0 0 0))
       (:ldur (:list 1000 1000 1000 1000))
       (:lchan (:list 1 1 1 1))
       (:lport nil)
       (:notes
        (:list
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 6900)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 7100)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 7200)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 7400)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))))))
     (:add-slots ((:onset 0) (:lchan (:list 1 1 1 1)) (:lport nil)))))
   (:id 24))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux 3")
   (:x 107)
   (:y 138)
   (:w 75)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 4 3 2 1 0))
   (:id 25))
  (:box
   (:library "Patterns")
   (:reference p-cycle)
   (:type :function)
   (:group-id nil)
   (:name "p-cycle")
   (:x 109)
   (:y 175)
   (:w 72)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value (:list 4 3 2 1 0))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:library "Patterns")
   (:reference p-cycle)
   (:type :function)
   (:group-id nil)
   (:name "p-cycle")
   (:x 76)
   (:y 270)
   (:w 72)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value (:list 0 2 4 6 8))
     (:reactive nil))
    (:input (:type :key) (:name "for") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:comment
   (:x 280)
   (:y 60)
   (:w 368)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :plain)))
   (:align nil)
   (:text "Period length patterns, input to the :for argument")
   (:id 28))
  (:comment
   (:x 280)
   (:y 20)
   (:w 229)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :plain)))
   (:align nil)
   (:text "Working with Patterns - ex. 6")
   (:id 29)))
 (:connections
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 5 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 4 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 4 :in 1))
   (:attributes
    (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 7 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 7 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 9 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 5 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 12 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 14 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 4 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 18 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 1))
   (:to (:box 18 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 19 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 1))
   (:to (:box 23 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 22 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 23 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 23 :out 0))
   (:to (:box 19 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 1))
   (:to (:box 27 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 26 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 26 :out 0))
   (:to (:box 27 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 19 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))