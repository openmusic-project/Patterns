
(:patch
 (:om-version 0.02)
 (:name "005 b - pval, dynamic weighting")
 (:doc "")
 (:info
  (:created "2019/09/09 10:52:53")
  (:modified "2019/09/10 9:50:21"))
 (:window (:size (1036 680)) (:position (398 378)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 793)
   (:y 299)
   (:w 256)
   (:h 45)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "May be used to retrive the value of the
named variable.  Perhaps not very useful?")
   (:id 0))
  (:box
   (:library "Patterns")
   (:reference get-pval)
   (:type :function)
   (:group-id nil)
   (:name "get-pval")
   (:x 700)
   (:y 300)
   (:w 78)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:comment
   (:x 783)
   (:y 220)
   (:w 215)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "set the value of the named variable")
   (:id 2))
  (:comment
   (:x 769)
   (:y 97)
   (:w 245)
   (:h 90)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "returns a closure with a named variable.
May be used as a placeholder
in a pattern for items which only
get a value after the pattern is
initialized")
   (:id 3))
  (:box
   (:library "Patterns")
   (:reference set-pval)
   (:type :function)
   (:group-id nil)
   (:name "set-pval")
   (:x 700)
   (:y 200)
   (:w 77)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VAL")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:library "Patterns")
   (:reference pval)
   (:type :function)
   (:group-id nil)
   (:name "pval")
   (:x 700)
   (:y 100)
   (:w 58)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:library "Patterns")
   (:reference pval)
   (:type :function)
   (:group-id nil)
   (:name "pval")
   (:x 313)
   (:y 138)
   (:w 58)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:library "Patterns")
   (:reference pval)
   (:type :function)
   (:group-id nil)
   (:name "pval")
   (:x 257)
   (:y 136)
   (:w 58)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:comment
   (:x 415)
   (:y 127)
   (:w 182)
   (:h 64)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "'pval creates a named variable.  
It's value can be set at init time, 
or later in a call to #'set-pval.
")
   (:id 8))
  (:comment
   (:x 357)
   (:y 403)
   (:w 273)
   (:h 60)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "collect n items from the weighting.
Inside the loop the weights ('whites', 'blacks')
are updated dynamically along the way")
   (:id 9))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 5")
   (:x 305)
   (:y 370)
   (:w 41)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 120)
   (:id 10))
  (:box
   (:reference
    (:patch
     (:om-version 0.02)
     (:name "OMLOOP 2")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (752 619)) (:position (146 92)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference
        (:in (:type omin) (:index 1) (:name "note pattern") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "note pattern")
       (:x 65)
       (:y 31)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:reference
        (:in (:type omin) (:index 2) (:name "function") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "function")
       (:x 209)
       (:y 31)
       (:w 66)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "output 1")
       (:x 142)
       (:y 534)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:reference
        (:in (:type omin) (:index 3) (:name "n (how many)") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "n (how many)")
       (:x 475)
       (:y 54)
       (:w 95)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:library "Patterns")
       (:reference set-pval)
       (:type :function)
       (:group-id nil)
       (:name "set-pval")
       (:x 203)
       (:y 394)
       (:w 77)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "VAL")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "Patterns")
       (:reference set-pval)
       (:type :function)
       (:group-id nil)
       (:name "set-pval")
       (:x 285)
       (:y 394)
       (:w 77)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "VAL")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:comment
       (:x 317)
       (:y 94)
       (:w 101)
       (:h 45)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "fit our function 
to 'n' samples")
       (:id 6))
      (:comment
       (:x 283)
       (:y 477)
       (:w 242)
       (:h 60)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "we only want the the named variables
to be updated, and don't care what
the calls return here")
       (:id 7))
      (:comment
       (:x 439)
       (:y 394)
       (:w 258)
       (:h 75)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "Here's the interesting part:
the named pvals get updated dynamically,
and the weights get adjusted accordingly
in the pattern")
       (:id 8))
      (:box
       (:reference seq)
       (:type :function)
       (:group-id nil)
       (:name "seq")
       (:x 227)
       (:y 477)
       (:w 55)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OP")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "op+")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "op+1") (:reactive nil)))
       (:id 9))
      (:box
       (:reference om-)
       (:type :function)
       (:group-id nil)
       (:name "om-")
       (:x 360)
       (:y 354)
       (:w 58)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:reference list-max)
       (:type :function)
       (:group-id nil)
       (:name "list-max")
       (:x 339)
       (:y 255)
       (:w 76)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value (:list 0 1 2))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:reference list-max)
       (:type :function)
       (:group-id nil)
       (:name "list-max")
       (:x 339)
       (:y 172)
       (:w 76)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value (:list 0 1 2))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:comment
       (:x 430)
       (:y 6)
       (:w 130)
       (:h 45)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "index into function,
and iteration control")
       (:id 13))
      (:box
       (:reference om*)
       (:type :function)
       (:group-id nil)
       (:name "om*")
       (:x 389)
       (:y 215)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value a)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value b)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:reference bpf)
       (:type :slots)
       (:group-id nil)
       (:name "BPF SLOTS")
       (:x 226)
       (:y 99)
       (:w 89)
       (:h 30)
       (:color (:color 0.9 0.88 0.81 1.0))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 0 100))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil)))
       (:id 15))
      (:box
       (:reference fixnum)
       (:type :value)
       (:group-id nil)
       (:name "aux 3")
       (:x 434)
       (:y 66)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 16))
      (:box
       (:reference om/)
       (:type :function)
       (:group-id nil)
       (:name "om/")
       (:x 481)
       (:y 172)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value x)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value y)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:reference x-transfer)
       (:type :function)
       (:group-id nil)
       (:name "x-transfer")
       (:x 220)
       (:y 255)
       (:w 86)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock :eval-once)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-VAL")
         (:value (:list 0 100))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:reference symbol)
       (:type :value)
       (:group-id nil)
       (:name "aux 2")
       (:x 283)
       (:y 354)
       (:w 48)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value blacks)
       (:id 19))
      (:box
       (:reference symbol)
       (:type :value)
       (:group-id nil)
       (:name "aux")
       (:x 157)
       (:y 354)
       (:w 50)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value whites)
       (:id 20))
      (:box
       (:reference collect)
       (:type :special)
       (:group-id nil)
       (:name "collect")
       (:x 62)
       (:y 394)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 21))
      (:box
       (:library "Patterns")
       (:reference p-next)
       (:type :function)
       (:group-id nil)
       (:name "p-next")
       (:x 75)
       (:y 311)
       (:w 69)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJ")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 22))
      (:box
       (:reference iterate)
       (:type :special)
       (:group-id nil)
       (:name "iterate")
       (:x 42)
       (:y 534)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 23))
      (:box
       (:reference loop-for)
       (:type :special)
       (:group-id nil)
       (:name "for")
       (:x 440)
       (:y 109)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 24)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 22 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 15 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 17 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 24 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 9 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 23 :in 0))
       (:attributes
        (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 5 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 14 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 18 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 18 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 15 :out 1))
       (:to (:box 12 :in 0))
       (:attributes
        (:color (:color 0.0 0.0 1.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 15 :out 2))
       (:to (:box 11 :in 0))
       (:attributes
        (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 16 :out 0))
       (:to (:box 24 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 14 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 4 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 10 :in 1))
       (:attributes
        (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 4 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 21 :out 0))
       (:to (:box 23 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 21 :out 1))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 22 :out 0))
       (:to (:box 21 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 24 :out 0))
       (:to (:box 17 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "OMLOOP 2")
   (:x 229)
   (:y 402)
   (:w 98)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "note pattern")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "function")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "n (how many)")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 11))
  (:comment
   (:x 517)
   (:y 259)
   (:w 141)
   (:h 60)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "function to lookup
dynamically changing
weight over time")
   (:id 12))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux 4")
   (:x 498)
   (:y 208)
   (:w 93)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 0 100 100))
   (:id 13))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux 3")
   (:x 394)
   (:y 207)
   (:w 93)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 30 70 100))
   (:id 14))
  (:box
   (:reference bpf)
   (:type :object)
   (:group-id nil)
   (:name "BPF")
   (:x 458)
   (:y 251)
   (:w 49)
   (:h 66)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "BPF")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 100)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0 0 0 1.0))
       (:decimals 0)
       (:x-points (:list 0 30 70 100))
       (:y-points (:list 0 0 100 100))))
     (:add-slots
      ((:decimals 0)
       (:color (:color 0 0 0 1.0))
       (:name "BPF")
       (:action nil)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))))))
   (:id 15))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 2")
   (:x 317)
   (:y 95)
   (:w 56)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value blacks)
   (:id 16))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux")
   (:x 249)
   (:y 95)
   (:w 56)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value whites)
   (:id 17))
  (:comment
   (:x 83)
   (:y 10)
   (:w 442)
   (:h 57)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :bold)))
   (:align nil)
   (:text
    "Changing weighting probabilities as a function of time.
Introducing 'pval'")
   (:id 18))
  (:box
   (:reference arithm-ser)
   (:type :function)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 91)
   (:y 149)
   (:w 89)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 8")
   (:x 80)
   (:y 97)
   (:w 48)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4600)
   (:id 20))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 9")
   (:x 130)
   (:y 97)
   (:w 48)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 8400)
   (:id 21))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 10")
   (:x 180)
   (:y 97)
   (:w 41)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 22))
  (:box
   (:reference
    (:patch
     (:om-version 0.02)
     (:name "OMLOOP")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference
        (:in (:type omin) (:index 1) (:name "input0") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "input0")
       (:x 5)
       (:y 0)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:reference
        (:in (:type omin) (:index 2) (:name "input") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "input")
       (:x 466)
       (:y 87)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "output 1")
       (:x 168)
       (:y 463)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:reference
        (:in (:type omin) (:index 3) (:name "input 2") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "input 2")
       (:x 523)
       (:y 124)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:comment
       (:x 523)
       (:y 66)
       (:w 116)
       (:h 45)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "weight for 'white',
resp. 'black' keys")
       (:id 4))
      (:box
       (:reference collect)
       (:type :special)
       (:group-id nil)
       (:name "collect")
       (:x 130)
       (:y 402)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 5))
      (:box
       (:reference omif)
       (:type :function)
       (:group-id nil)
       (:name "omif")
       (:x 226)
       (:y 259)
       (:w 213)
       (:h nil)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:library "Patterns")
       (:reference p-w-node)
       (:type :function)
       (:group-id nil)
       (:name "p-w-node")
       (:x 86)
       (:y 318)
       (:w 84)
       (:h nil)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "weight")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:reference member)
       (:type :function)
       (:group-id nil)
       (:name "member")
       (:x 226)
       (:y 213)
       (:w 80)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value n)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value a)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:reference cons)
       (:type :value)
       (:group-id nil)
       (:name "list 2")
       (:x 286)
       (:y 102)
       (:w 163)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 0 200 400 500 700 900 1100))
       (:id 9))
      (:box
       (:reference fixnum)
       (:type :value)
       (:group-id nil)
       (:name "aux")
       (:x 232)
       (:y 65)
       (:w 42)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1200)
       (:id 10))
      (:box
       (:reference om//)
       (:type :function)
       (:group-id nil)
       (:name "om//")
       (:x 209)
       (:y 122)
       (:w 63)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DIVISOR")
         (:value 1)
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 11))
      (:box
       (:reference iterate)
       (:type :special)
       (:group-id nil)
       (:name "iterate")
       (:x 68)
       (:y 463)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 12))
      (:box
       (:reference loop-list)
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 15)
       (:y 101)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 13)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 13 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 6 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 6 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 1))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 7 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 8 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 11 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 1))
       (:to (:box 8 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 7 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 11 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "OMLOOP")
   (:x 216)
   (:y 248)
   (:w 83)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 23))
  (:box
   (:library "Patterns")
   (:reference p-weighting)
   (:type :function)
   (:group-id nil)
   (:name "p-weighting")
   (:x 202)
   (:y 321)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:reference chord-seq)
   (:type :object)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 80)
   (:y 487)
   (:w 544)
   (:h 109)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 80))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "llegato")
     (:value 3000)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 12000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 8000)
         (:list 6800)
         (:list 8000)
         (:list 4900)
         (:list 4600)
         (:list 6100)
         (:list 6600)
         (:list 5600)
         (:list 4900)
         (:list 7500)
         (:list 6800)
         (:list 7300)
         (:list 8000)
         (:list 7300)
         (:list 8200)
         (:list 6100)
         (:list 7800)
         (:list 5800)
         (:list 5600)
         (:list 5600)
         (:list 5800)
         (:list 7000)
         (:list 7800)
         (:list 8000)
         (:list 6800)
         (:list 5400)
         (:list 6800)
         (:list 5400)
         (:list 6100)
         (:list 5800)
         (:list 7800)
         (:list 5800)
         (:list 8200)
         (:list 6100)
         (:list 5600)
         (:list 7500)
         (:list 8200)
         (:list 6600)
         (:list 6100)
         (:list 7000)
         (:list 5100)
         (:list 5800)
         (:list 6300)
         (:list 6100)
         (:list 5600)
         (:list 8200)
         (:list 5400)
         (:list 5600)
         (:list 5400)
         (:list 7600)
         (:list 6600)
         (:list 5800)
         (:list 6900)
         (:list 7000)
         (:list 5600)
         (:list 6600)
         (:list 5800)
         (:list 6100)
         (:list 7800)
         (:list 6100)
         (:list 4900)
         (:list 7100)
         (:list 7500)
         (:list 8100)
         (:list 8200)
         (:list 5100)
         (:list 5800)
         (:list 8200)
         (:list 8000)
         (:list 7000)
         (:list 4900)
         (:list 6800)
         (:list 4800)
         (:list 7800)
         (:list 7300)
         (:list 5600)
         (:list 6300)
         (:list 5300)
         (:list 5000)
         (:list 6700)
         (:list 8400)
         (:list 4800)
         (:list 7700)
         (:list 6200)
         (:list 6700)
         (:list 5000)
         (:list 8100)
         (:list 6000)
         (:list 6400)
         (:list 5000)
         (:list 8300)
         (:list 6200)
         (:list 4700)
         (:list 7600)
         (:list 7600)
         (:list 6200)
         (:list 5700)
         (:list 5200)
         (:list 6700)
         (:list 6200)
         (:list 6200)
         (:list 6000)
         (:list 7700)
         (:list 7700)
         (:list 7100)
         (:list 5300)
         (:list 4700)
         (:list 5300)
         (:list 6000)
         (:list 6000)
         (:list 7200)
         (:list 7900)
         (:list 8300)
         (:list 5900)
         (:list 6500)
         (:list 7400)
         (:list 6700)
         (:list 7400)
         (:list 6000)
         (:list 6400)
         (:list 6400)))
       (:lonset
        (:list
         0
         80
         160
         240
         320
         400
         480
         560
         640
         720
         800
         880
         960
         1040
         1120
         1200
         1280
         1360
         1440
         1520
         1600
         1680
         1760
         1840
         1920
         2000
         2080
         2160
         2240
         2320
         2400
         2480
         2560
         2640
         2720
         2800
         2880
         2960
         3040
         3120
         3200
         3280
         3360
         3440
         3520
         3600
         3680
         3760
         3840
         3920
         4000
         4080
         4160
         4240
         4320
         4400
         4480
         4560
         4640
         4720
         4800
         4880
         4960
         5040
         5120
         5200
         5280
         5360
         5440
         5520
         5600
         5680
         5760
         5840
         5920
         6000
         6080
         6160
         6240
         6320
         6400
         6480
         6560
         6640
         6720
         6800
         6880
         6960
         7040
         7120
         7200
         7280
         7360
         7440
         7520
         7600
         7680
         7760
         7840
         7920
         8000
         8080
         8160
         8240
         8320
         8400
         8480
         8560
         8640
         8720
         8800
         8880
         8960
         9040
         9120
         9200
         9280
         9360
         9440
         9520
         9600
         12000))
       (:ldur
        (:list
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)
         (:list 2400)))
       (:lvel
        (:list
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)))
       (:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))))
   (:id 25))
  (:comment
   (:x 316)
   (:y 55)
   (:w 116)
   (:h 45)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "weight for 'white',
resp. 'black' keys")
   (:id 26))
  (:comment
   (:x 66)
   (:y 68)
   (:w 108)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "chromatic scale")
   (:id 27)))
 (:connections
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 23 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 23 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 11 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 25 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 15 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 15 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 11 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 7 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 23 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 19 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 19 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 19 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 23 :out 0))
   (:to (:box 24 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 11 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))