
(:patch
 (:om-version 0.02)
 (:name "008 a - thunk")
 (:doc "")
 (:info
  (:created "2019/09/09 10:52:55")
  (:modified "2019/09/09 10:53:34"))
 (:window (:size (818 607)) (:position (502 258)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 5")
   (:x 466)
   (:y 324)
   (:w 34)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 16)
   (:id 0))
  (:box
   (:reference om/)
   (:type :function)
   (:group-id nil)
   (:name "om/")
   (:x 441)
   (:y 358)
   (:w 59)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value n)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 16)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:reference bpf)
   (:type :object)
   (:group-id nil)
   (:name "BPF")
   (:x 403)
   (:y 238)
   (:w 100)
   (:h 85)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "BPF")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 500)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0 0.0 0.0 1.0))
       (:decimals 0)
       (:x-points (:list 0 100 200 300 400 500))
       (:y-points (:list 3 6 2 2 6 3))))
     (:add-slots
      ((:decimals 0)
       (:color (:color 0.0 0.0 0.0 1.0))
       (:name "BPF")
       (:action nil)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))))))
   (:id 2))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 3")
   (:x 636)
   (:y 434)
   (:w 41)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 120)
   (:id 3))
  (:comment
   (:x 170)
   (:y 350)
   (:w 90)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "period length")
   (:id 4))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux")
   (:x 66)
   (:y 241)
   (:w 85)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 2 3 4 5 6))
   (:id 5))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux 4")
   (:x 205)
   (:y 241)
   (:w 55)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 3 4 5))
   (:id 6))
  (:box
   (:reference p-weighting)
   (:type :function)
   (:group-id nil)
   (:name "p-weighting")
   (:x 185)
   (:y 275)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value (:list 3 4 5))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:reference voice)
   (:type :object)
   (:group-id nil)
   (:name "VOICE")
   (:x 293)
   (:y 481)
   (:w 429)
   (:h 101)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "VOICE")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list ? (:list (:list (:list 4 4) (:list 1 1 1 1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list 0 6.5)
      (:list 375 11.375)
      (:list 500 15.0)
      (:list 1000 18.625)
      (:list 1125 22.25)
      (:list 1375 26.5)
      (:list 1500 30.125)
      (:list 1625 33.75)
      (:list 2000 44.625)
      (:list 2375 49.5)
      (:list 2500 53.125)
      (:list 2750 56.25)
      (:list 3000 60.5)))
    (:staff :g))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 3874)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 6000)
         (:list 6000)
         (:list 6000)
         (:list 6000)
         (:list 6000)
         (:list 6000)))
       (:lonset (:list 0 375 1125 1375 1625 2375 4000))
       (:ldur
        (:list
         (:list 374)
         (:list 749)
         (:list 874)
         (:list 874)
         (:list 1499)
         (:list 1499)))
       (:lvel
        (:list
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)))
       (:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)))
       (:lport (:list nil nil nil nil nil nil))
       (:llegato nil)
       (:tree
        (:list
         (:list
          (:list 4 4)
          (:list
           (:list 1 (:list 3 1))
           1.0
           (:list 1 (:list 1.0 2 1))
           (:list 1 (:list 1.0 3))))
         (:list
          (:list 4 4)
          (:list
           (:list 1 (:list 3.0 1))
           (:list 1 (:list 1.0 -1))
           -2))))
       (:tempo 120)))
     (:add-slots
      ((:lvel
        (:list
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)))
       (:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)))
       (:lport (:list nil nil nil nil nil nil))))))
   (:id 8))
  (:box
   (:reference mktree)
   (:type :function)
   (:group-id nil)
   (:name "mktree")
   (:x 395)
   (:y 411)
   (:w 73)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RHYTHM")
     (:value (:list 1/4 1/4 1/4 1/4))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMESIGNS")
     (:value (:list 4 4))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 2")
   (:x 305)
   (:y 348)
   (:w 23)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value t)
   (:id 10))
  (:box
   (:reference p-next)
   (:type :function)
   (:group-id nil)
   (:name "p-next")
   (:x 275)
   (:y 388)
   (:w 69)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "OBJ") (:value a) (:reactive nil))
    (:input
     (:type :optional)
     (:name "num")
     (:value t)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:reference p-heap)
   (:type :function)
   (:group-id nil)
   (:name "p-heap")
   (:x 90)
   (:y 320)
   (:w 72)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "for") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:reference
    (:patch
     (:om-version 0.02)
     (:name "prim + retro")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:comment
       (:x 161)
       (:y 177)
       (:w 155)
       (:h 60)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "get one periods worth,
append this with its own
reverse")
       (:id 0))
      (:box
       (:reference reverse)
       (:type :function)
       (:group-id nil)
       (:name "reverse")
       (:x 101)
       (:y 257)
       (:w 74)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:reference append)
       (:type :function)
       (:group-id nil)
       (:name "append")
       (:x 50)
       (:y 308)
       (:w 75)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "lists")
         (:value a)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lists")
         (:value b)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:reference symbol)
       (:type :value)
       (:group-id nil)
       (:name "aux")
       (:x 79)
       (:y 126)
       (:w 23)
       (:h 32)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value t)
       (:id 3))
      (:box
       (:reference p-next)
       (:type :function)
       (:group-id nil)
       (:name "p-next")
       (:x 57)
       (:y 156)
       (:w 69)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock :eval-once)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJ")
         (:value a)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "num")
         (:value t)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "input")
       (:x 55)
       (:y 45)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:type :io)
       (:group-id nil)
       (:name "output")
       (:x 52)
       (:y 376)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 6)))
     (:connections
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 2 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 4 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 4 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "prim + retro")
   (:x 115)
   (:y 410)
   (:w 97)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 13))
  (:box
   (:reference p-thunk)
   (:type :function)
   (:group-id nil)
   (:name "p-thunk")
   (:x 125)
   (:y 481)
   (:w 76)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:comment
   (:x 45)
   (:y 208)
   (:w 336)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "Generating random rhythms followed by their retrograde:")
   (:id 15))
  (:comment
   (:x 45)
   (:y 86)
   (:w 385)
   (:h 120)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "Calls a function each time a new period of items is needed. The
function is passed no arguments and must return the list of
elements representing the next period in the pattern, or false if
there are no more elements.

See generic pattern initializations for documentation on keyword
initializations to the pattern.")
   (:id 16))
  (:comment
   (:x 45)
   (:y 46)
   (:w 92)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :bold)))
   (:align nil)
   (:text "thunk")
   (:id 17)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 1 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 2))
   (:to (:box 1 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 8 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 7 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 12 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 8 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 11 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 2 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 11 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))