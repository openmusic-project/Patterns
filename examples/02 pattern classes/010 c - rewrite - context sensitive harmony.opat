
(:patch
 (:om-version 0.02)
 (:name "010 c - rewrite - context sensitive harmony")
 (:doc "")
 (:info
  (:created "2019/09/09 10:52:55")
  (:modified "2019/09/10 9:49:55"))
 (:window (:size (836 784)) (:position (83 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "Patterns")
   (:reference p-rewrite-node)
   (:type :function)
   (:group-id nil)
   (:name "p-rewrite-node")
   (:x 160)
   (:y 137)
   (:w 112)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ELEMENT")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "id") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux 15")
   (:x 251)
   (:y 564)
   (:w 59)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 500))
   (:id 1))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 14")
   (:x 594)
   (:y 564)
   (:w 41)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 160)
   (:id 2))
  (:comment
   (:x 345)
   (:y 231)
   (:w 114)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text ":initial generation")
   (:id 3))
  (:comment
   (:x 345)
   (:y 291)
   (:w 80)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text ":rules input")
   (:id 4))
  (:comment
   (:x 510)
   (:y 291)
   (:w 168)
   (:h 60)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "set value of pval knum,
to be updated dynamically
while pattern executes")
   (:id 5))
  (:comment
   (:x 335)
   (:y 460)
   (:w 115)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "generate N notes")
   (:id 6))
  (:box
   (:reference chord-seq)
   (:type :object)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 77)
   (:y 597)
   (:w 587)
   (:h 111)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 300))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "llegato")
     (:value 400)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 30300)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 8000 8400 8700)
         (:list 8100 8400 8800)
         (:list 8100 8500 8800)
         (:list 8000 8300 8700)
         (:list 7900 8300 8600)
         (:list 7800 8100 8500)
         (:list 7600 7900 8300)
         (:list 7700 8100 8400)
         (:list 7700 8100 8400)
         (:list 7700 8000 8400)
         (:list 7800 8200 8500)
         (:list 7700 8100 8400)
         (:list 7600 7900 8300)
         (:list 7400 7700 8100)
         (:list 7500 7900 8200)
         (:list 7500 7900 8200)
         (:list 7500 7800 8200)
         (:list 7600 8000 8300)
         (:list 7500 7900 8200)
         (:list 7400 7700 8100)
         (:list 7200 7500 7900)
         (:list 7300 7700 8000)
         (:list 7300 7700 8000)
         (:list 7300 7600 8000)
         (:list 7400 7800 8100)
         (:list 7300 7700 8000)
         (:list 7300 7600 8000)
         (:list 7400 7800 8100)
         (:list 7300 7700 8000)
         (:list 7200 7500 7900)
         (:list 7000 7300 7700)
         (:list 7100 7500 7800)
         (:list 7100 7500 7800)
         (:list 7000 7300 7700)
         (:list 6800 7100 7500)
         (:list 6900 7300 7600)
         (:list 6900 7300 7600)
         (:list 6900 7200 7600)
         (:list 7000 7400 7700)
         (:list 6900 7300 7600)
         (:list 6800 7100 7500)
         (:list 6600 6900 7300)
         (:list 6700 7100 7400)
         (:list 6700 7100 7400)
         (:list 6600 6900 7300)
         (:list 6400 6700 7100)
         (:list 6500 6900 7200)
         (:list 6500 6900 7200)
         (:list 6500 6800 7200)
         (:list 6600 7000 7300)
         (:list 6500 6900 7200)
         (:list 6500 6800 7200)
         (:list 6600 7000 7300)
         (:list 6500 6900 7200)
         (:list 6400 6700 7100)
         (:list 6200 6500 6900)
         (:list 6300 6700 7000)
         (:list 6300 6700 7000)
         (:list 6200 6500 6900)
         (:list 6000 6300 6700)))
       (:lonset
        (:list
         0
         500
         1000
         1500
         2000
         2500
         3000
         3500
         4000
         4500
         5000
         5500
         6000
         6500
         7000
         7500
         8000
         8500
         9000
         9500
         10000
         10500
         11000
         11500
         12000
         12500
         13000
         13500
         14000
         14500
         15000
         15500
         16000
         16500
         17000
         17500
         18000
         18500
         19000
         19500
         20000
         20500
         21000
         21500
         22000
         22500
         23000
         23500
         24000
         24500
         25000
         25500
         26000
         26500
         27000
         27500
         28000
         28500
         29000
         29500
         30300))
       (:ldur
        (:list
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)
         (:list 800 800 800)))
       (:lvel
        (:list
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)))
       (:loffset
        (:list
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))))
   (:id 7))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 18")
   (:x 472)
   (:y 319)
   (:w 34)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 80)
   (:id 8))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 17")
   (:x 408)
   (:y 319)
   (:w 51)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value knum)
   (:id 9))
  (:box
   (:library "Patterns")
   (:reference set-pval)
   (:type :function)
   (:group-id nil)
   (:name "set-pval")
   (:x 434)
   (:y 353)
   (:w 77)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "VAL")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:reference seq)
   (:type :function)
   (:group-id nil)
   (:name "seq")
   (:x 206)
   (:y 433)
   (:w 55)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OP")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "op+")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "op+1") (:reactive nil)))
   (:id 11))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 16")
   (:x 276)
   (:y 458)
   (:w 34)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 60)
   (:id 12))
  (:box
   (:reference
    (:patch
     (:om-version 0.02)
     (:name "L-system harmony")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "L-system pattern stream")
         (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "L-system pattern stream")
       (:x 60)
       (:y 0)
       (:w 151)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:reference (:in (:type omin) (:index 2) (:name "N") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "N")
       (:x 280)
       (:y 0)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "output 1")
       (:x 334)
       (:y 546)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:comment
       (:x 187)
       (:y 266)
       (:w 131)
       (:h 30)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
       (:align nil)
       (:text "here's the fun part...")
       (:id 3))
      (:comment
       (:x 14)
       (:y 190)
       (:w 122)
       (:h 45)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "reset 'term (to nil)
every time through")
       (:id 4))
      (:comment
       (:x 382)
       (:y 466)
       (:w 216)
       (:h 45)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "collect a chord based
on current value of 'term and 'knum")
       (:id 5))
      (:comment
       (:x 303)
       (:y 33)
       (:w 108)
       (:h 30)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
       (:align nil)
       (:text "collect n chords")
       (:id 6))
      (:box
       (:reference fixnum)
       (:type :value)
       (:group-id nil)
       (:name "aux 6")
       (:x 233)
       (:y 31)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 7))
      (:box
       (:reference fixnum)
       (:type :value)
       (:group-id nil)
       (:name "aux 5")
       (:x 410)
       (:y 237)
       (:w 36)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 100)
       (:id 8))
      (:box
       (:reference om*)
       (:type :function)
       (:group-id nil)
       (:name "om*")
       (:x 380)
       (:y 277)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value n)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 100)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:reference chord)
       (:type :object)
       (:group-id nil)
       (:name "CHORD")
       (:x 332)
       (:y 348)
       (:w 60)
       (:h 90)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "CHORD")
       (:display :hidden)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value (:list 100))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LOFFSET")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list 1000))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value (:list 1))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil))
        (:output (:name "LOFFSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "lchan") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params (:staff :g))
       (:value
        (:object
         (:class chord)
         (:slots
          ((:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:onset 0)
           (:item-time nil)
           (:item-internal-time nil)
           (:item-type nil)
           (:attributes nil)
           (:lmidic (:list 6000))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:ldur (:list 1000))
           (:lchan (:list 1))
           (:lport nil)
           (:notes
            (:list
             (:object
              (:class note)
              (:slots
               ((:symbolic-date nil)
                (:symbolic-dur nil)
                (:symbolic-dur-extent 0)
                (:midic 6000)
                (:vel 100)
                (:dur 1000)
                (:chan 1)
                (:port nil)
                (:offset 0)))
              (:add-slots ((:port nil))))))))
         (:add-slots ((:onset 0) (:lchan (:list 1)) (:lport nil)))))
       (:id 10))
      (:box
       (:reference symbol)
       (:type :value)
       (:group-id nil)
       (:name "aux 4")
       (:x 419)
       (:y 104)
       (:w 46)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value knum)
       (:id 11))
      (:box
       (:library "Patterns")
       (:reference get-pval)
       (:type :function)
       (:group-id nil)
       (:name "get-pval")
       (:x 418)
       (:y 144)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:reference symbol)
       (:type :value)
       (:group-id nil)
       (:name "aux 3")
       (:x 323)
       (:y 104)
       (:w 42)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value term)
       (:id 13))
      (:box
       (:library "Patterns")
       (:reference get-pval)
       (:type :function)
       (:group-id nil)
       (:name "get-pval")
       (:x 318)
       (:y 144)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:reference om+)
       (:type :function)
       (:group-id nil)
       (:name "om+")
       (:x 379)
       (:y 235)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:reference
        (:patch
         (:om-version 0.02)
         (:name "update term and knum")
         (:doc "")
         (:info (:created nil) (:modified nil))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:reference
            (:in (:type omin) (:index 1) (:name "input0") (:doc "")))
           (:type :io)
           (:group-id nil)
           (:name "input0")
           (:x 226)
           (:y 12)
           (:w 56)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:type :io)
           (:group-id nil)
           (:name "output 1")
           (:x 398)
           (:y 415)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:comment
           (:x 270)
           (:y 234)
           (:w 99)
           (:h 60)
           (:fgcolor (:color 0 0 0 1.0))
           (:bgcolor nil)
           (:border 0)
           (:roundness nil)
           (:text-font
            (:font
             (:face "Liberation Sans")
             (:size 12)
             (:style :plain)))
           (:align nil)
           (:text
            "if we see a list
set 'term to
its value")
           (:id 2))
          (:comment
           (:x 530)
           (:y 234)
           (:w 167)
           (:h 60)
           (:fgcolor (:color 0 0 0 1.0))
           (:bgcolor nil)
           (:border 0)
           (:roundness nil)
           (:text-font
            (:font
             (:face "Liberation Sans")
             (:size 12)
             (:style :plain)))
           (:align nil)
           (:text
            "if the next item is an atom
update knum from its
previous value")
           (:id 3))
          (:comment
           (:x 24)
           (:y 371)
           (:w 140)
           (:h 45)
           (:fgcolor (:color 0 0 0 1.0))
           (:bgcolor nil)
           (:border 0)
           (:roundness nil)
           (:text-font
            (:font
             (:face "Liberation Sans")
             (:size 12)
             (:style :plain)))
           (:align nil)
           (:text
            "loop until 'term is set,
i.e. is a list")
           (:id 4))
          (:comment
           (:x 447)
           (:y 413)
           (:w 134)
           (:h 60)
           (:fgcolor (:color 0 0 0 1.0))
           (:bgcolor nil)
           (:border 0)
           (:roundness nil)
           (:text-font
            (:font
             (:face "Liberation Sans")
             (:size 12)
             (:style :plain)))
           (:align nil)
           (:text
            "we're only interested
in the side effects
in this inner loop")
           (:id 5))
          (:box
           (:reference symbol)
           (:type :value)
           (:group-id nil)
           (:name "aux 4")
           (:x 538)
           (:y 62)
           (:w 46)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value knum)
           (:id 6))
          (:box
           (:library "Patterns")
           (:reference get-pval)
           (:type :function)
           (:group-id nil)
           (:name "get-pval")
           (:x 537)
           (:y 95)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NAME")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:reference +)
           (:type :function)
           (:group-id nil)
           (:name "+")
           (:x 541)
           (:y 184)
           (:w 56)
           (:h nil)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:reference symbol)
           (:type :value)
           (:group-id nil)
           (:name "aux 3")
           (:x 466)
           (:y 190)
           (:w 46)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value knum)
           (:id 9))
          (:box
           (:library "Patterns")
           (:reference set-pval)
           (:type :function)
           (:group-id nil)
           (:name "set-pval")
           (:x 473)
           (:y 228)
           (:w 77)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NAME")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "VAL")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:reference symbol)
           (:type :value)
           (:group-id nil)
           (:name "aux 2")
           (:x 352)
           (:y 124)
           (:w 42)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value term)
           (:id 11))
          (:box
           (:library "Patterns")
           (:reference set-pval)
           (:type :function)
           (:group-id nil)
           (:name "set-pval")
           (:x 355)
           (:y 168)
           (:w 77)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NAME")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "VAL")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:reference listp)
           (:type :function)
           (:group-id nil)
           (:name "listp")
           (:x 227)
           (:y 235)
           (:w 59)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "OBJECT")
             (:value x)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:reference omif)
           (:type :function)
           (:group-id nil)
           (:name "omif")
           (:x 234)
           (:y 309)
           (:w 246)
           (:h nil)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:library "Patterns")
           (:reference p-next)
           (:type :function)
           (:group-id nil)
           (:name "p-next")
           (:x 224)
           (:y 87)
           (:w 69)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock :eval-once)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "OBJ")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:reference not)
           (:type :function)
           (:group-id nil)
           (:name "not")
           (:x 65)
           (:y 214)
           (:w 55)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "X")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 16))
          (:box
           (:reference symbol)
           (:type :value)
           (:group-id nil)
           (:name "aux")
           (:x 60)
           (:y 90)
           (:w 42)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value term)
           (:id 17))
          (:box
           (:library "Patterns")
           (:reference get-pval)
           (:type :function)
           (:group-id nil)
           (:name "get-pval")
           (:x 55)
           (:y 131)
           (:w 78)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NAME")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:reference iterate)
           (:type :special)
           (:group-id nil)
           (:name "iterate")
           (:x 232)
           (:y 423)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 19))
          (:box
           (:reference loop-while)
           (:type :special)
           (:group-id nil)
           (:name "while")
           (:x 46)
           (:y 313)
           (:w 51)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "condition")
             (:value t)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 20)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 15 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 7 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 8 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 8 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 9 :out 0))
           (:to (:box 10 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 14 :in 2))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 12 :in 0))
           (:attributes
            (:color (:color 1.0 0.0 0.0 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 12 :out 0))
           (:to (:box 14 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 14 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 14 :out 0))
           (:to (:box 19 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 8 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 12 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 13 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 16 :out 0))
           (:to (:box 20 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 17 :out 0))
           (:to (:box 18 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 18 :out 0))
           (:to (:box 16 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 20 :out 0))
           (:to (:box 19 :in 1))
           (:attributes (:color nil :style nil :modif nil))))))
       (:type :patch)
       (:group-id nil)
       (:name "update term and knum")
       (:x 116)
       (:y 295)
       (:w nil)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input0")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 16))
      (:box
       (:reference null)
       (:type :value)
       (:group-id nil)
       (:name "aux 2")
       (:x 86)
       (:y 238)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value nil)
       (:id 17))
      (:box
       (:reference symbol)
       (:type :value)
       (:group-id nil)
       (:name "aux")
       (:x 29)
       (:y 238)
       (:w 42)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value term)
       (:id 18))
      (:box
       (:library "Patterns")
       (:reference set-pval)
       (:type :function)
       (:group-id nil)
       (:name "set-pval")
       (:x 52)
       (:y 278)
       (:w 77)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "VAL")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:reference collect)
       (:type :special)
       (:group-id nil)
       (:name "collect")
       (:x 305)
       (:y 448)
       (:w 68)
       (:h nil)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 20))
      (:box
       (:reference iterate)
       (:type :special)
       (:group-id nil)
       (:name "iterate")
       (:x 92)
       (:y 548)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 21))
      (:box
       (:reference loop-for)
       (:type :special)
       (:group-id nil)
       (:name "for")
       (:x 253)
       (:y 68)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 22)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 22 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 22 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 9 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 10 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 20 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 15 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 14 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 15 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 9 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 16 :out 0))
       (:to (:box 21 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 19 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 19 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 21 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 21 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 1))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 22 :out 0))
       (:to (:box 21 :in 3))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "L-system harmony")
   (:x 178)
   (:y 500)
   (:w 157)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "L-system pattern stream")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "N")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 13))
  (:comment
   (:x 69)
   (:y 322)
   (:w 110)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text "L-system pattern")
   (:id 14))
  (:box
   (:library "Patterns")
   (:reference p-transition)
   (:type :function)
   (:group-id nil)
   (:name "p-transition")
   (:x 578)
   (:y 182)
   (:w 95)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LHS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:library "Patterns")
   (:reference p-transition)
   (:type :function)
   (:group-id nil)
   (:name "p-transition")
   (:x 455)
   (:y 182)
   (:w 95)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LHS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RHS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:reference list)
   (:type :function)
   (:group-id nil)
   (:name "list")
   (:x 510)
   (:y 231)
   (:w 52)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value a) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value b) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux 13")
   (:x 615)
   (:y 110)
   (:w 64)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list f g + f -))
   (:id 18))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 12")
   (:x 590)
   (:y 137)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value g)
   (:id 19))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux 11")
   (:x 480)
   (:y 110)
   (:w 88)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list f - g - - g + f))
   (:id 20))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 10")
   (:x 469)
   (:y 137)
   (:w 23)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value f)
   (:id 21))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux 9")
   (:x 261)
   (:y 257)
   (:w 84)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list f + g f - g -))
   (:id 22))
  (:box
   (:library "Patterns")
   (:reference p-rewrite)
   (:type :function)
   (:group-id nil)
   (:name "p-rewrite")
   (:x 211)
   (:y 322)
   (:w 133)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "initially")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "rules") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 8")
   (:x 407)
   (:y 60)
   (:w 24)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value -)
   (:id 24))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 7")
   (:x 357)
   (:y 60)
   (:w 31)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value -1)
   (:id 25))
  (:box
   (:library "Patterns")
   (:reference p-rewrite-node)
   (:type :function)
   (:group-id nil)
   (:name "p-rewrite-node")
   (:x 345)
   (:y 137)
   (:w 112)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ELEMENT")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "id") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 3")
   (:x 315)
   (:y 60)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value +)
   (:id 27))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 2")
   (:x 269)
   (:y 60)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 28))
  (:box
   (:library "Patterns")
   (:reference p-rewrite-node)
   (:type :function)
   (:group-id nil)
   (:name "p-rewrite-node")
   (:x 255)
   (:y 106)
   (:w 112)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ELEMENT")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "id") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 29))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 6")
   (:x 220)
   (:y 60)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value g)
   (:id 30))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux 4")
   (:x 160)
   (:y 60)
   (:w 55)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 3 7))
   (:id 31))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 5")
   (:x 128)
   (:y 60)
   (:w 23)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value f)
   (:id 32))
  (:box
   (:reference list)
   (:type :function)
   (:group-id nil)
   (:name "list")
   (:x 135)
   (:y 189)
   (:w 210)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value a) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value b) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux")
   (:x 40)
   (:y 60)
   (:w 55)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 4 7))
   (:id 34))
  (:box
   (:library "Patterns")
   (:reference p-rewrite-node)
   (:type :function)
   (:group-id nil)
   (:name "p-rewrite-node")
   (:x 66)
   (:y 106)
   (:w 112)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ELEMENT")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "id") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:comment
   (:x 93)
   (:y 14)
   (:w 295)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :bold)))
   (:align nil)
   (:text "rewrite - context-sensitive harmony")
   (:id 36)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 33 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 7 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 7 :in 7))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 10 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 10 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 11 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 13 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 7 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 17 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 23 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 15 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 15 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 16 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 23 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 23 :out 0))
   (:to (:box 11 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 26 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 26 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 26 :out 0))
   (:to (:box 33 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 29 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 28 :out 0))
   (:to (:box 29 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 33 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 30 :out 0))
   (:to (:box 0 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 31 :out 0))
   (:to (:box 0 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 32 :out 0))
   (:to (:box 35 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 33 :out 0))
   (:to (:box 23 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 35 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 35 :out 0))
   (:to (:box 33 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))