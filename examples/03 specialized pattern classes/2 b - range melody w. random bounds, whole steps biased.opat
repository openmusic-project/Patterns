
(:patch
 (:om-version 0.02)
 (:name "2 b - range melody w. random bounds, whole steps biased")
 (:doc "")
 (:info
  (:created "2019/09/09 11:21:52")
  (:modified "2019/09/09 11:37:47"))
 (:window (:size (813 731)) (:position (104 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 18")
   (:x 609)
   (:y 539)
   (:w 41)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 150)
   (:id 0))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux 17")
   (:x 315)
   (:y 538)
   (:w 59)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 120))
   (:id 1))
  (:box
   (:reference chord-seq)
   (:type :object)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 141)
   (:y 578)
   (:w 535)
   (:h 97)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 9660)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 6000)
         (:list 5800)
         (:list 6000)
         (:list 5900)
         (:list 6000)
         (:list 6300)
         (:list 6200)
         (:list 6400)
         (:list 6500)
         (:list 6700)
         (:list 6800)
         (:list 6700)
         (:list 6500)
         (:list 6300)
         (:list 6400)
         (:list 6300)
         (:list 6400)
         (:list 6700)
         (:list 6800)
         (:list 6600)
         (:list 6500)
         (:list 6400)
         (:list 6500)
         (:list 6300)
         (:list 6200)
         (:list 6400)
         (:list 6600)
         (:list 6800)
         (:list 6600)
         (:list 6400)
         (:list 6300)
         (:list 6600)
         (:list 6800)
         (:list 6900)
         (:list 6700)
         (:list 6600)
         (:list 6700)
         (:list 6900)
         (:list 6600)
         (:list 6800)
         (:list 6900)
         (:list 6700)
         (:list 6900)
         (:list 6700)
         (:list 6900)
         (:list 6800)
         (:list 7100)
         (:list 6000)
         (:list 5900)
         (:list 5700)
         (:list 5400)
         (:list 5600)
         (:list 5800)
         (:list 5500)
         (:list 5600)
         (:list 5500)
         (:list 5200)
         (:list 5500)
         (:list 5700)
         (:list 5800)
         (:list 5900)
         (:list 5600)
         (:list 5900)
         (:list 5600)
         (:list 5800)
         (:list 5900)
         (:list 6000)
         (:list 5800)
         (:list 6000)
         (:list 5800)
         (:list 5500)
         (:list 5400)
         (:list 5600)
         (:list 5400)
         (:list 5500)
         (:list 5600)
         (:list 5500)
         (:list 5700)
         (:list 5900)
         (:list 6100)))
       (:lonset
        (:list
         0
         120
         240
         360
         480
         600
         720
         840
         960
         1080
         1200
         1320
         1440
         1560
         1680
         1800
         1920
         2040
         2160
         2280
         2400
         2520
         2640
         2760
         2880
         3000
         3120
         3240
         3360
         3480
         3600
         3720
         3840
         3960
         4080
         4200
         4320
         4440
         4560
         4680
         4800
         4920
         5040
         5160
         5280
         5400
         5520
         5640
         5760
         5880
         6000
         6120
         6240
         6360
         6480
         6600
         6720
         6840
         6960
         7080
         7200
         7320
         7440
         7560
         7680
         7800
         7920
         8040
         8160
         8280
         8400
         8520
         8640
         8760
         8880
         9000
         9120
         9240
         9360
         9480
         9660))
       (:ldur
        (:list
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)
         (:list 180)))
       (:lvel
        (:list
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)))
       (:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))))
   (:id 2))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 16")
   (:x 278)
   (:y 443)
   (:w 34)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 80)
   (:id 3))
  (:box
   (:reference
    (:patch
     (:om-version 0.02)
     (:name "play-pat")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference fixnum)
       (:type :value)
       (:group-id nil)
       (:name "aux 2")
       (:x 131)
       (:y 176)
       (:w 36)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 100)
       (:id 0))
      (:box
       (:reference om*)
       (:type :function)
       (:group-id nil)
       (:name "om*")
       (:x 109)
       (:y 212)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value n)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 100)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:reference collect)
       (:type :special)
       (:group-id nil)
       (:name "collect")
       (:x 105)
       (:y 269)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 2))
      (:box
       (:reference p-next)
       (:type :function)
       (:group-id nil)
       (:name "p-next")
       (:x 88)
       (:y 120)
       (:w 69)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "OBJ")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:reference fixnum)
       (:type :value)
       (:group-id nil)
       (:name "aux")
       (:x 204)
       (:y 95)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 4))
      (:box
       (:reference iterate)
       (:type :special)
       (:group-id nil)
       (:name "iterate")
       (:x 37)
       (:y 351)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 5))
      (:box
       (:reference
        (:in (:type omin) (:index 1) (:name "pattern") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "pattern")
       (:x 77)
       (:y 39)
       (:w 62)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:reference loop-for)
       (:type :special)
       (:group-id nil)
       (:name "for")
       (:x 228)
       (:y 134)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 7))
      (:box
       (:reference
        (:in (:type omin) (:index 2) (:name "n (reps)") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "n (reps)")
       (:x 235)
       (:y 57)
       (:w 63)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "output 1")
       (:x 137)
       (:y 351)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 9)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 1 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 1))
       (:to (:box 9 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 7 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 5 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 7 :in 1))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "play-pat")
   (:x 239)
   (:y 476)
   (:w 78)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "pattern")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "n (reps)")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 4))
  (:comment
   (:x 334)
   (:y 343)
   (:w 69)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text ":stepping")
   (:id 5))
  (:comment
   (:x 263)
   (:y 304)
   (:w 61)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text ":downto")
   (:id 6))
  (:comment
   (:x 251)
   (:y 266)
   (:w 45)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text ":to")
   (:id 7))
  (:comment
   (:x 159)
   (:y 300)
   (:w 45)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 12) (:style :plain)))
   (:align nil)
   (:text ":from")
   (:id 8))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 15")
   (:x 262)
   (:y 328)
   (:w 34)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 48)
   (:id 9))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 14")
   (:x 210)
   (:y 266)
   (:w 34)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 72)
   (:id 10))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 13")
   (:x 159)
   (:y 330)
   (:w 34)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 60)
   (:id 11))
  (:box
   (:reference p-range)
   (:type :function)
   (:group-id nil)
   (:name "p-range")
   (:x 145)
   (:y 373)
   (:w 226)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :key) (:name "from") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "to") (:value 1) (:reactive nil))
    (:input (:type :key) (:name "downto") (:value nil) (:reactive nil))
    (:input
     (:type :key)
     (:name "stepping")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "list 3")
   (:x 425)
   (:y 164)
   (:w 21)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value -1)
   (:id 13))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "list 2")
   (:x 390)
   (:y 164)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 14))
  (:box
   (:reference list)
   (:type :function)
   (:group-id nil)
   (:name "list")
   (:x 150)
   (:y 229)
   (:w 500)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value a) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value b) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value c) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value d) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value e) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value f) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 12")
   (:x 588)
   (:y 109)
   (:w 31)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value -3)
   (:id 16))
  (:box
   (:reference single-float)
   (:type :value)
   (:group-id nil)
   (:name "aux 11")
   (:x 631)
   (:y 109)
   (:w 37)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.75)
   (:id 17))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 10")
   (:x 673)
   (:y 109)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 18))
  (:box
   (:reference p-w-node)
   (:type :function)
   (:group-id nil)
   (:name "p-w-node")
   (:x 611)
   (:y 152)
   (:w 85)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "X") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "weight") (:value 1) (:reactive nil))
    (:input (:type :key) (:name "max") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 9")
   (:x 454)
   (:y 111)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 20))
  (:box
   (:reference single-float)
   (:type :value)
   (:group-id nil)
   (:name "aux 8")
   (:x 497)
   (:y 111)
   (:w 37)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.75)
   (:id 21))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 7")
   (:x 540)
   (:y 110)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 22))
  (:box
   (:reference p-w-node)
   (:type :function)
   (:group-id nil)
   (:name "p-w-node")
   (:x 477)
   (:y 154)
   (:w 85)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "X") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "weight") (:value 1) (:reactive nil))
    (:input (:type :key) (:name "max") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 6")
   (:x 258)
   (:y 101)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 24))
  (:box
   (:reference single-float)
   (:type :value)
   (:group-id nil)
   (:name "aux 5")
   (:x 301)
   (:y 101)
   (:w 37)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1.5)
   (:id 25))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 4")
   (:x 342)
   (:y 100)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 26))
  (:box
   (:reference p-w-node)
   (:type :function)
   (:group-id nil)
   (:name "p-w-node")
   (:x 281)
   (:y 144)
   (:w 85)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "X") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "weight") (:value 1) (:reactive nil))
    (:input (:type :key) (:name "max") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 3")
   (:x 145)
   (:y 141)
   (:w 31)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value -2)
   (:id 28))
  (:box
   (:reference single-float)
   (:type :value)
   (:group-id nil)
   (:name "aux 2")
   (:x 177)
   (:y 141)
   (:w 37)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1.5)
   (:id 29))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux")
   (:x 216)
   (:y 141)
   (:w 27)
   (:h 32)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 30))
  (:box
   (:reference p-w-node)
   (:type :function)
   (:group-id nil)
   (:name "p-w-node")
   (:x 157)
   (:y 184)
   (:w 85)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "X") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "weight") (:value 1) (:reactive nil))
    (:input (:type :key) (:name "max") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 31))
  (:box
   (:reference p-weighting)
   (:type :function)
   (:group-id nil)
   (:name "p-weighting")
   (:x 390)
   (:y 275)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 32))
  (:comment
   (:x 48)
   (:y 26)
   (:w 688)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font (:face "Liberation Sans") (:size 16) (:style :bold)))
   (:align nil)
   (:text
    "range - Melody generated by bounded random walk with whole steps most prevalent. ")
   (:id 33)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 2 :in 7))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 2 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 4 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 2 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 12 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 12 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 4 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 15 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 15 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 32 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 19 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 19 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 19 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 15 :in 5))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 23 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 23 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 23 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 23 :out 0))
   (:to (:box 15 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 27 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 27 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 26 :out 0))
   (:to (:box 27 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 15 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 28 :out 0))
   (:to (:box 31 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 31 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 30 :out 0))
   (:to (:box 31 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 31 :out 0))
   (:to (:box 15 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 32 :out 0))
   (:to (:box 12 :in 3))
   (:attributes (:color nil :style nil :modif nil)))))